{"version":3,"sources":["redux/actions/action-types.js","redux/reducers/login-reducer.js","redux/reducers/is-logged-reducer.js","redux/reducers/points-reducer.js","game-logic/game-config.js","redux/reducers/game-config-reducer.js","redux/reducers/index.js","redux/store/store.js","components/Button/Button.js","components/Text-input/Text-input.js","redux/actions/index.js","components/Login-form/Login-form.js","components/Title/Title.js","pages/Login/Login-page.js","music/All_I_Want_For_Christmas_Is_You.mp3","music/Break_On_Through.mp3","music/Cant_Get_You_Out_Of_My_Head.mp3","music/Diamonds_Are_A_Girls_Best_Friend.mp3","music/Feeling_Good.mp3","music/index.js","music/September.mp3","music/Get_Lucky.mp3","music/Hey_Joe.mp3","music/I_Want_To_Hold_Your_Hand.mp3","music/I_Wanna_Dance_with_Somebody.mp3","music/In_The_End.mp3","music/Its_Raining_Men.mp3","music/Sandstorm.mp3","music/U_Cant_Touch_This.mp3","music/Summertime.mp3","music/Vibes_and_Stuff.mp3","music/The_End.mp3","music/Survivor.mp3","music/Wake_Me_Up_Before_You_Go_Go.mp3","music/Who_Let_The_Dogs_Out.mp3","music/Wish_You_Were_Here.mp3","music/Work_Bitch.mp3","components/Player/Player.js","components/Button-choice/Button-choice.js","components/Timer/Timer.js","components/Quiz-choices/Quiz-choices.js","components/End-game/End-game.js","components/Song-result/Song-result.js","pages/Quiz/Quiz.js","pages/UserHub/UserHub.js","pages/Instructions/Instructions-page.js","components/Navigation/Navigation.js","App.js","index.js"],"names":["SAVE_USER","SET_USER_LOGGED_IN","SET_USER_LOGGED_OUT","SET_USER_POINTS","RESET_USER_POINTS","SET_GAME_CONFIG","userReducer","state","action","type","payload","isUserLoggedReducer","pointsReducer","gameConfig","gamePoints","songTimer","songNumber","numberOfAnswers","gameConfigReducer","rootReducer","combineReducers","isUserLoggedIn","currentUser","userPoints","store","createStore","composeWithDevTools","applyMiddleware","thunk","Button","className","innerText","onClickFunc","onClick","TextInput","placeholder","formState","inputName","inputType","inputValue","setInputValue","id","value","onChange","e","oldState","target","required","saveUser","user","setUserLoggedIn","initialState","username","password","fetchUser","setFormState","dispatch","a","requestOptions","method","headers","body","JSON","stringify","fetch","fetchData","json","data","LoginForm","useState","passedFormState","formClassName","useDispatch","handleFormSubmit","preventDefault","onSubmit","Title","title","LoginPage","useSelector","navigate","useNavigate","useEffect","songs","Feeling_Good","All_I_Want_For_Christmas_Is_You","Break_On_Through","Cant_Get_You_Out_Of_My_Head","Diamonds_Are_A_Girls_Best_Friend","Player","song","playingSong","setIsPlaying","src","find","thisSong","includes","autoPlay","onCanPlay","play","onPlay","controls","ButtonChoice","replaceAll","TimerComponent","time","timerAction","setSongPoints","isPlaying","timer","setTimer","countdown","setInterval","counter","points","timeout","setTimeout","clearInterval","clearTimeout","QuizChoices","currentSong","songsList","setAnswered","setCorrectAnswer","songPoints","setNumberOfSongs","songChoices","setSongChoices","randomizeSongs","list","sort","Math","random","randomSongs","filter","filteredRandomSong","answers","slice","handleAnswer","userChoice","Timer","map","index","EndGame","to","SongResult","correctAnswer","setNextSong","gameOver","setGameOver","numberOfSongs","fetchSongsList","setSongsList","fetchSongs","Quiz","setCurrentSong","playingSongIndex","setPlayingSongIndex","answered","isCountdown","setIsCountdown","console","log","UserHub","toUpperCase","Instructions","Navigation","cookies","Cookies","remove","App","HOST","window","location","origin","replace","socket","WebSocket","addEventListener","get","err","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3303b07d.chunk.js","sourcesContent":["export const SAVE_USER = 'SAVE_USER';\nexport const USER_DB_CHECKER = 'USER_DB_CHECKER';\nexport const SET_USER_LOGGED_IN = 'SET_USER_LOGGED_IN';\nexport const SET_USER_LOGGED_OUT = 'SET_USER_LOGGED_OUT';\nexport const SET_USER_POINTS = 'SET_USER_POINTS';\nexport const RESET_USER_POINTS = 'RESET_USER_POINTS';\nexport const SET_GAME_CONFIG = 'SET_GAME_CONFIG';\n","import { SAVE_USER } from '../actions/action-types';\n\nconst userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SAVE_USER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { SET_USER_LOGGED_IN, SET_USER_LOGGED_OUT } from '../actions/action-types';\n\nconst isUserLoggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case SET_USER_LOGGED_IN:\n      return true;\n    case SET_USER_LOGGED_OUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isUserLoggedReducer;\n","import { SET_USER_POINTS, RESET_USER_POINTS } from '../actions/action-types';\n\nconst pointsReducer = (state = 0, action) => {\n  switch (action.type) {\n    case SET_USER_POINTS:\n      return state + action.payload;\n    case RESET_USER_POINTS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default pointsReducer;\n","const songTimer = 15;\nconst gamePoints = songTimer * 100;\nconst songNumber = 3;\nconst numberOfAnswers = 4;\n\nconst gameConfig = {\n  gamePoints,\n  songTimer,\n  songNumber,\n  numberOfAnswers,\n};\n\nexport default gameConfig;\n","import { SET_GAME_CONFIG } from '../actions/action-types';\nimport gameConfig from '../../game-logic/game-config';\n\nconst gameConfigReducer = (state = gameConfig, action) => {\n  switch (action.type) {\n    case SET_GAME_CONFIG:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default gameConfigReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './login-reducer';\nimport isUserLoggedReducer from './is-logged-reducer';\nimport pointsReducer from './points-reducer';\nimport gameConfigReducer from './game-config-reducer';\n\nconst rootReducer = combineReducers({\n  isUserLoggedIn: isUserLoggedReducer,\n  currentUser: userReducer,\n  userPoints: pointsReducer,\n  gameConfig: gameConfigReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","const Button = ({\n  type, className, innerText, onClickFunc,\n}) => (\n  <button\n    type={type}\n    className={`btn ${className}__btn`}\n    onClick={onClickFunc}\n  >\n    {innerText}\n  </button>\n);\n\nexport default Button;\n","const TextInput = ({\n  placeholder, className, formState, inputName, inputType,\n}) => {\n  const [inputValue, setInputValue] = formState;\n\n  const handleOnChange = e => {\n    setInputValue(oldState => ({\n      ...oldState,\n      [inputName]: e.target.value,\n    }));\n  };\n\n  return (\n    <>\n    <label id={inputName} className={`${className}__label hidden`}>{inputName}</label>\n    <input\n      type = {inputType}\n      aria-labelledby = {inputName}\n      placeholder = {placeholder}\n      className = {`${className}__input`}\n      value = {inputValue[inputName]}\n      onChange = {handleOnChange}\n      required\n    />\n    </>\n  );\n};\n\nexport default TextInput;\n","import {\n  SAVE_USER,\n  SET_USER_LOGGED_IN,\n  SET_USER_LOGGED_OUT,\n  SET_USER_POINTS,\n  SET_GAME_CONFIG,\n  RESET_USER_POINTS,\n} from './action-types';\n\nexport const saveUser = user => ({\n  type: SAVE_USER,\n  payload: user,\n});\n\nexport const setUserLoggedIn = () => ({\n  type: SET_USER_LOGGED_IN,\n});\nexport const setUserLoggedOut = () => ({\n  type: SET_USER_LOGGED_OUT,\n});\n\nexport const setUserPoints = points => ({\n  type: SET_USER_POINTS,\n  payload: points,\n});\n\nexport const resetUserPoints = points => ({\n  type: RESET_USER_POINTS,\n  payload: points,\n});\n\nexport const setGameConfig = payload => ({\n  type: SET_GAME_CONFIG,\n  payload,\n});\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '../Button/Button';\nimport TextInput from '../Text-input/Text-input';\nimport { saveUser, setUserLoggedIn } from '../../redux/actions';\n\nconst initialState = { username: '', password: '' };\n\nconst fetchUser = ([formState, setFormState]) => (\n  async dispatch => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(formState),\n    };\n\n    const fetchData = await fetch('/api/users', requestOptions);\n    const data = await fetchData.json();\n    dispatch(saveUser(data));\n    dispatch(setUserLoggedIn());\n    setFormState(initialState);\n    return true;\n  }\n);\n\nconst LoginForm = () => {\n  const [formState, setFormState] = useState(initialState);\n  const passedFormState = [formState, setFormState];\n  const formClassName = 'login-form';\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    dispatch(fetchUser(passedFormState));\n  };\n\n  return (\n    <form className={formClassName} onSubmit={handleFormSubmit}>\n      <TextInput\n        formState={passedFormState}\n        inputType='text'\n        inputName='username'\n        placeholder='Type your username'\n        className={formClassName}\n      />\n      <Button\n        className='login-form'\n        type='submit'\n        innerText='CREATE A GAME'\n      />\n    </form>\n  );\n};\n\nexport default LoginForm;\n","const Title = ({ title }) => (\n  <h1>{title}</h1>\n);\n\nexport default Title;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport LoginForm from '../../components/Login-form/Login-form';\nimport Title from '../../components/Title/Title';\n\nconst LoginPage = () => {\n  const { isUserLoggedIn } = useSelector(state => state);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isUserLoggedIn) {\n      navigate('/userhub');\n    }\n  }, [isUserLoggedIn]);\n\n  return (\n    <section className='login-wrapper'>\n      <Title title='HELLO YOU' />\n      <p className='login-wrapper__description'>Enter your username to create a music quiz</p>\n      <LoginForm />\n    </section>\n  );\n};\n\nexport default LoginPage;\n","export default __webpack_public_path__ + \"static/media/All_I_Want_For_Christmas_Is_You.893ac235.mp3\";","export default __webpack_public_path__ + \"static/media/Break_On_Through.a69b132c.mp3\";","export default __webpack_public_path__ + \"static/media/Cant_Get_You_Out_Of_My_Head.82ae7400.mp3\";","export default __webpack_public_path__ + \"static/media/Diamonds_Are_A_Girls_Best_Friend.01b56c51.mp3\";","export default __webpack_public_path__ + \"static/media/Feeling_Good.b02bfe0d.mp3\";","/* eslint-disable */\nimport All_I_Want_For_Christmas_Is_You from './All_I_Want_For_Christmas_Is_You.mp3'; \nimport Break_On_Through from './Break_On_Through.mp3';\nimport Cant_Get_You_Out_Of_My_Head from './Cant_Get_You_Out_Of_My_Head.mp3';\nimport Diamonds_Are_A_Girls_Best_Friend from './Diamonds_Are_A_Girls_Best_Friend.mp3';\nimport Feeling_Good from './Feeling_Good.mp3'\nimport September from './September.mp3';\nimport Get_Lucky from './Get_Lucky.mp3';\nimport Hey_Joe from './Hey_Joe.mp3';\nimport I_Want_To_Hold_Your_Hand from './I_Want_To_Hold_Your_Hand.mp3';\nimport I_Wanna_Dance_with_Somebody from './I_Wanna_Dance_with_Somebody.mp3';\nimport In_The_End from './In_The_End.mp3';\nimport Its_Raining_Men from './Its_Raining_Men.mp3';\nimport Sandstorm from './Sandstorm.mp3';\nimport U_Cant_Touch_This from './U_Cant_Touch_This.mp3';\nimport Summertime from './Summertime.mp3';\nimport Vibes_and_Stuff from './Vibes_and_Stuff.mp3';\nimport The_End from './The_End.mp3';\nimport Survivor from './Survivor.mp3';\nimport Wake_Me_Up_Before_You_Go_Go from './Wake_Me_Up_Before_You_Go_Go.mp3';\nimport Who_Let_The_Dogs_Out from './Who_Let_The_Dogs_Out.mp3';\nimport Wish_You_Were_Here from './Wish_You_Were_Here.mp3';\nimport Work_Bitch from './Work_Bitch.mp3';\n\nconst songs = [\n  Feeling_Good,\n  All_I_Want_For_Christmas_Is_You,\n  Break_On_Through,\n  Cant_Get_You_Out_Of_My_Head,\n  Diamonds_Are_A_Girls_Best_Friend,\n  Feeling_Good,\n  September,\n  Get_Lucky,\n  Hey_Joe,\n  I_Want_To_Hold_Your_Hand,\n  I_Wanna_Dance_with_Somebody,\n  In_The_End,\n  Its_Raining_Men,\n  Sandstorm,\n  U_Cant_Touch_This,\n  Summertime,\n  Vibes_and_Stuff,\n  The_End,\n  Survivor,\n  Wake_Me_Up_Before_You_Go_Go,\n  Who_Let_The_Dogs_Out,\n  Wish_You_Were_Here,\n  Work_Bitch\n]\n\nexport default songs;","export default __webpack_public_path__ + \"static/media/September.0010a8f7.mp3\";","export default __webpack_public_path__ + \"static/media/Get_Lucky.4da7401d.mp3\";","export default __webpack_public_path__ + \"static/media/Hey_Joe.98301351.mp3\";","export default __webpack_public_path__ + \"static/media/I_Want_To_Hold_Your_Hand.4ca7cc8b.mp3\";","export default __webpack_public_path__ + \"static/media/I_Wanna_Dance_with_Somebody.4a0b47e7.mp3\";","export default __webpack_public_path__ + \"static/media/In_The_End.ce8ffb17.mp3\";","export default __webpack_public_path__ + \"static/media/Its_Raining_Men.e57afa3c.mp3\";","export default __webpack_public_path__ + \"static/media/Sandstorm.ac0e80c6.mp3\";","export default __webpack_public_path__ + \"static/media/U_Cant_Touch_This.696254c5.mp3\";","export default __webpack_public_path__ + \"static/media/Summertime.9f6f42b4.mp3\";","export default __webpack_public_path__ + \"static/media/Vibes_and_Stuff.1f10f2e1.mp3\";","export default __webpack_public_path__ + \"static/media/The_End.7e52587f.mp3\";","export default __webpack_public_path__ + \"static/media/Survivor.67e4b78d.mp3\";","export default __webpack_public_path__ + \"static/media/Wake_Me_Up_Before_You_Go_Go.e3b593cb.mp3\";","export default __webpack_public_path__ + \"static/media/Who_Let_The_Dogs_Out.f70cdc7a.mp3\";","export default __webpack_public_path__ + \"static/media/Wish_You_Were_Here.c36db672.mp3\";","export default __webpack_public_path__ + \"static/media/Work_Bitch.e349f3b4.mp3\";","import ReactAudioPlayer from 'react-audio-player';\n\nconst Player = ({ playingSong, songs, setIsPlaying }) => {\n  const findSongIndex = song => songs.find(thisSong => thisSong.includes(song));\n\n  return (\n    <ReactAudioPlayer\n      src={findSongIndex(playingSong)}\n      autoPlay\n      onCanPlay={e => e.target.play()}\n      onPlay={() => setIsPlaying(true)}\n      controls\n    />\n  );\n};\n\nexport default Player;\n","const ButtonChoice = ({\n  type, className, song, onClickFunc,\n}) => (\n  <button\n    type={type}\n    className={`btn ${className}__btn-game`}\n    onClick={onClickFunc}\n    value={song}\n  >\n    {song.replaceAll('_', ' ')}\n  </button>\n);\n\nexport default ButtonChoice;\n","import { useState, useEffect } from 'react';\n\nconst TimerComponent = ({\n  time, timerAction, setSongPoints, isPlaying,\n}) => {\n  const [timer, setTimer] = useState(time);\n\n  useEffect(() => {\n    if (typeof isPlaying === 'undefined') {\n      const countdown = setInterval(() => {\n        setTimer(counter => counter - 1);\n        if (setSongPoints) {\n          setSongPoints(points => points - 100);\n        }\n      }, 1000);\n\n      const timeout = setTimeout(() => {\n        timerAction(false);\n      }, timer * 1000);\n\n      return () => {\n        clearInterval(countdown);\n        clearTimeout(timeout);\n      };\n    }\n\n    return false;\n  }, []);\n\n  useEffect(() => {\n    if (isPlaying) {\n      const countdown = setInterval(() => {\n        setTimer(counter => counter - 1);\n        if (setSongPoints) {\n          setSongPoints(points => points - 100);\n        }\n      }, 1000);\n\n      const timeout = setTimeout(() => {\n        timerAction(false);\n      }, timer * 1000);\n\n      return () => {\n        clearInterval(countdown);\n        clearTimeout(timeout);\n      };\n    }\n    return false;\n  }, [isPlaying]);\n\n  return (<h1 className='song-timer'>{timer}</h1>);\n};\n\nexport default TimerComponent;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ButtonChoice from '../Button-choice/Button-choice';\nimport TimerComponent from '../Timer/Timer';\nimport { setUserPoints } from '../../redux/actions';\n\nconst QuizChoices = ({\n  currentSong,\n  songsList, setAnswered, setCorrectAnswer, setSongPoints, songPoints,\n  setNumberOfSongs, isPlaying,\n}) => {\n  const [songChoices, setSongChoices] = useState();\n  const { gameConfig } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const randomizeSongs = list => [...list].sort(() => Math.random() - 0.5);\n  const filterSongs = list => list.filter(song => song !== currentSong);\n\n  useEffect(() => {\n    (async () => {\n      const randomSongs = await randomizeSongs(songsList);\n      const filteredRandomSong = await filterSongs(randomSongs);\n      const answers = filteredRandomSong.slice(0, gameConfig.numberOfAnswers - 1);\n\n      setSongChoices(randomizeSongs([\n        currentSong,\n        ...answers,\n      ]));\n      setSongPoints(gameConfig.gamePoints);\n    }\n    )();\n  }, [currentSong]);\n\n  const handleAnswer = e => {\n    setNumberOfSongs(songs => songs - 1);\n    if (!e) {\n      setCorrectAnswer(false);\n      return setAnswered(true);\n    }\n    if (e.target.value === currentSong) {\n      setCorrectAnswer(true);\n      dispatch(setUserPoints(songPoints));\n      return setAnswered(true);\n    }\n    setCorrectAnswer(false);\n    return setAnswered(true);\n  };\n\n  const userChoice = e => {\n    if (!e) {\n      return handleAnswer();\n    }\n    e.preventDefault();\n    return handleAnswer(e);\n  };\n  return (\n    <article className='quiz__choices'>\n      <TimerComponent\n        time={gameConfig.songTimer}\n        timerAction={userChoice}\n        setSongPoints={setSongPoints}\n        isPlaying={isPlaying}\n      />\n      {songChoices\n        && songChoices.map((song, index) => (\n          <ButtonChoice\n            key={index}\n            song={song}\n            className='quiz'\n            onClickFunc={userChoice}\n          />\n        ))\n      }\n    </article>\n  );\n};\n\nexport default QuizChoices;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from '../Button/Button';\n\nconst EndGame = () => {\n  const { userPoints } = useSelector(state => state);\n  return (\n  <article className='game-result'>\n      <h2>Your total score is {userPoints}</h2>\n      <Link className='link' to='/' >\n        <Button\n          className='game-result__exit'\n          type='submit'\n          innerText='EXIT QUIZ'\n        />\n      </Link>\n  </article>\n  );\n};\n\nexport default EndGame;\n","import { useEffect } from 'react';\nimport Button from '../Button/Button';\nimport EndGame from '../End-game/End-game';\n\nconst SongResult = ({\n  correctAnswer, setNextSong, songPoints, gameOver, setGameOver, numberOfSongs,\n}) => {\n  useEffect(() => {\n    if (numberOfSongs === 0) {\n      return setGameOver(true);\n    }\n    return true;\n  }, [numberOfSongs]);\n\n  return (\n  <article className='song-result'>\n    { correctAnswer\n      ? <>\n        <p className='song-result__text emojis'>👏🏻👏🏻👏🏻</p>\n        <p className='song-result__text'>Good job!</p>\n        <p className='song-result__text'>Your answer was correct</p>\n\n        <p className='song-result__title'>Your result is {songPoints} points</p>\n      </>\n      : <>\n      <p className='song-result__text emojis'>💩</p>\n      <p className='song-result__text'>Sorry!</p>\n      <p className='song-result__text'>That was incorrect</p>\n       </>\n    }\n     {!gameOver ? <Button\n        className='login-form'\n        type='submit'\n        innerText='NEXT SONG'\n        onClickFunc={setNextSong}\n      />\n       : <EndGame />}\n      {/* {gameOver && <EndGame />} */}\n  </article>\n  );\n};\n\nexport default SongResult;\n","/* eslint-disable */\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport songs from '../../music';\nimport Player from '../../components/Player/Player';\nimport QuizChoices from '../../components/Quiz-choices/Quiz-choices';\nimport SongResult from '../../components/Song-result/Song-result';\nimport TimerComponent from '../../components/Timer/Timer';\nimport { resetUserPoints } from '../../redux/actions';\n\n\nconst fetchSongsList = async setSongsList => {\n  const requestOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n  };\n  const fetchSongs = await fetch('/api/songs', requestOptions);\n  const data = await fetchSongs.json();\n  setSongsList(data);\n  return data;\n};\n\nconst Quiz = () => {\n  const { gameConfig } = useSelector(state => state);\n  const [songsList, setSongsList] = useState([]);\n  const [currentSong, setCurrentSong] = useState();\n  const [playingSongIndex, setPlayingSongIndex] = useState(0);\n  const [answered, setAnswered] = useState(false);\n  const [correctAnswer, setCorrectAnswer] = useState(false);\n  const [isCountdown, setIsCountdown] = useState(true);\n  const [songPoints, setSongPoints] = useState(gameConfig.gamePoints);\n  const [numberOfSongs, setNumberOfSongs] = useState(gameConfig.songNumber);\n  const [gameOver, setGameOver] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const dispatch = useDispatch();\n \n  useEffect(() => {\n    setIsPlaying(false);\n    setNumberOfSongs(gameConfig.songNumber);\n    console.log('Quiz usereffect');\n    dispatch(resetUserPoints(0));\n    fetchSongsList(setSongsList);\n  }, []); \n  \n  useEffect(() => {\n    setCurrentSong(songsList[playingSongIndex]);\n  }, [songsList, playingSongIndex]);\n\n  // useEffect(() => {\n  //   if (numberOfSongs === 0) {\n  //     setGameOver(true);\n  //   }\n  // }, [numberOfSongs]);\n\n  // useEffect(() => {\n  //   if (isPlaying) {\n  //     return setIsCountdown(true);\n  //   }\n  //   return false;\n  // }, [isPlaying])\n\n  const setNextSong = () => {\n    setAnswered(false);\n    setIsCountdown(true);\n    setPlayingSongIndex(index => index + 1);\n  };\n\n  return (\n    <section className='quiz'>\n      {isCountdown \n        && <TimerComponent\n              time={3}\n              timerAction={setIsCountdown}\n            />\n      }\n      { currentSong\n        && !answered\n        && !isCountdown\n        && !gameOver\n        && <>\n          <Player\n            playingSong={currentSong}\n            songs={songs}\n            setIsPlaying={setIsPlaying}\n          /> \n          <QuizChoices \n            currentSong={currentSong}\n            songsList={songsList}\n            setAnswered={setAnswered}\n            setCorrectAnswer={setCorrectAnswer}\n            setSongPoints={setSongPoints}\n            songPoints={songPoints}\n            numberOfSongs={numberOfSongs}\n            setNumberOfSongs={setNumberOfSongs}\n            isPlaying={isPlaying}\n          />\n        </>\n      }\n      {answered\n        && !isCountdown\n        && <SongResult\n          setGameOver={setGameOver}\n          gameOver={gameOver} \n          correctAnswer={correctAnswer} \n          setNextSong={setNextSong}\n          songPoints={songPoints}\n          numberOfSongs={numberOfSongs}\n        /> \n      }\n    </section>\n  );\n};\n\nexport default Quiz;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Title from '../../components/Title/Title';\nimport Button from '../../components/Button/Button';\n// import Stats from '../../components/Stats/Stats';\n\nconst UserHub = () => {\n  const { currentUser } = useSelector(state => state);\n  const username = currentUser.username || 'YOU';\n\n  return (\n  <section className='welcome-wrapper'>\n    <Title title={`WELCOME ${username.toUpperCase()}`}/>\n    {/* <Stats userStats={'Your quiz statistics'}/> */}\n    <Link className='link' to='/instructions' >\n      <Button\n        className='how-to-play'\n        innerText='HOW TO PLAY'\n      />\n    </Link>\n    <Link className='link' to='/quiz'>\n      <Button\n        className='start-game'\n        innerText='START'\n      />\n    </Link>\n  </section>\n  );\n};\n\nexport default UserHub;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from '../../components/Button/Button';\n\nconst Instructions = () => {\n  const { gameConfig } = useSelector(state => state);\n\n  return (\n  <section className='instruction-wrapper'>\n    <h2 className='instruction-wrapper__title'>HOW TO PLAY?</h2>\n    <p className='instruction-description--title'>\n    Welcome to our music quiz!\n    </p>\n    <p className='instruction-description'>\n      Music Quiz’ is a fun single-player game\n      where you can test you music knowledge!\n    </p>\n    <p className='instruction-description'>\n      Start the game by pressing the \"Start\" button.\n    </p>\n    <p className='instruction-description'>\n      A 3 second countdown will then start. After the countdown, the actual gameplay begins,\n      so be ready!\n      You got 15 seconds to make your guess, with multiple choices.\n      There is ONLY one correct answer.\n    </p>\n    <p className='instruction-description'>\n      The point system is time based. The faster you get the correct answer,\n      the more points you will recieve.\n      Be aware, wrong answers will award NO points.\n    </p>\n    <p className='instruction-description'>\n      Each game consists of {gameConfig.songNumber} rounds.\n      After each game your total score will be displayed\n      and saved to the leaderboard.\n    </p>\n    <p className='instruction-description--last'>\n      Good luck and have fun!\n    </p>\n    <Link className='link' to='/quiz'>\n      <Button\n        className='start-game'\n        innerText='START'\n      />\n    </Link>\n  </section>\n  );\n};\n\nexport default Instructions;\n","import Cookies from 'universal-cookie';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setUserLoggedOut } from '../../redux/actions';\n\nconst Navigation = () => {\n  const { isUserLoggedIn } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const cookies = new Cookies();\n\n  const handleLogoutClick = () => {\n    dispatch(setUserLoggedOut());\n    navigate('/');\n    cookies.remove('user');\n  };\n\n  return (\n    <nav className=\"nav\">\n      <Link className='link' to='/' >\n        <p className=\"nav__logo\">MUSICVAVORS</p>\n      </Link>\n      {isUserLoggedIn && <button\n      className=\"nav-logout__btn\"\n      onClick={handleLogoutClick}>LOGOUT</button>}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useEffect } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Cookies from 'universal-cookie';\nimport LoginPage from './pages/Login/Login-page';\nimport Quiz from './pages/Quiz/Quiz';\nimport UserHub from './pages/UserHub/UserHub';\nimport Instructions from './pages/Instructions/Instructions-page';\nimport { saveUser, setUserLoggedIn } from './redux/actions';\nimport Navigation from './components/Navigation/Navigation';\nimport EndGame from './components/End-game/End-game';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    try {\n      const HOST = window.location.origin.replace(/^http/, 'ws');\n      const socket = new WebSocket(HOST);\n      const cookies = new Cookies();\n\n      socket.addEventListener('message', e => {\n        console.log('e.data', e.data);\n      });\n      socket.addEventListener('open', () => {\n        console.log('Frontend is open for papi');\n      });\n      const user = cookies.get('user');\n      if (user) {\n        dispatch(saveUser(user));\n        dispatch(setUserLoggedIn());\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navigation />\n        <Routes>\n          <Route path=\"/\" element={<LoginPage />} />\n          <Route path=\"/userhub\" element={<UserHub />} />\n          <Route path=\"/quiz\" element={<Quiz />} />\n          <Route path=\"/instructions\" element={<Instructions />} />\n          <Route path=\"/results\" element={<EndGame />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\nimport App from './App';\nimport './main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}